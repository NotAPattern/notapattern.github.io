import { ChangeTheme, ChipList, EducationList, JobList, Section, SkillList, Title } from "./components";
import { Chip, Text, useTheme } from "@uikit";
import { educationData, skillData, workExperienceData } from "@shared/data";
import { format, intervalToDuration } from "date-fns";
import { Component } from "solid-js";
import { formatTotalWorkExperience } from "./shared/formatTotalWorkExperience";
import { noun as pluralNoun } from "plural-ru";
import styles from "./App.module.sass";
import Telegram from "./assets/telegram.svg";
import { ThemeInvoker } from "@shared/types";
import 'normalize.css';

const appThemeInvoker: ThemeInvoker = {
  light: styles.App_theme_light,
  dark: styles.App_theme_dark,
};

const createDateThemeInvoker: ThemeInvoker = {
  light: styles.CreateDate_theme_light,
  dark: styles.CreateDate_theme_dark,
};

const App: Component = () => {
  const [theme] = useTheme()!;

  const age = intervalToDuration({
    start: new Date(1999, 2, 27),
    end: new Date(),
  }).years!;

  return (
    <div classList={{ [styles.App]: true, [appThemeInvoker[theme()]]: true }}>
      <div class={styles.AppWrapper}>
        <header class={styles.Header}>
          <Title>Notapattern</Title>
        </header>
        <main>
          <div class={styles.MainWrapper}>
            <ChangeTheme />
            <Section title="–ü—Ä–∏–≤–µ—Ç üëã, –º–µ–Ω—è –∑–æ–≤—É—Ç –ù–∏–∫–∏—Ç–∞ –ö–∞—Ä–∞—Ü–µ–≤">
              <ChipList>
                <Chip
                  as="a"
                  href="mailto:nikita.karatsev@gmail.com"
                  target="_blank"
                >
                  üìß nikita.karatsev@gmail.com
                </Chip>
                <Chip
                  as="a"
                  href="https://notapattern.github.io"
                  target="_blank"
                >
                  üåê notapattern.github.io
                </Chip>
                <Chip
                  as="a"
                  href="https://t.me/notapattern"
                  leftIcon={<Telegram />}
                  target="_blank"
                >
                  Telegram
                </Chip>
              </ChipList>
              <Text>
                –ú–Ω–µ {age.toString()} {pluralNoun(age, "–≥–æ–¥", "–≥–æ–¥–∞", "–ª–µ—Ç")},
                –∑–∞–Ω–∏–º–∞—é—Å—å front end —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–æ–π. –£–≤–ª–µ–∫–∞—é—Å—å —Å—Ç–æ–∏—Ü–∏–∑–º–æ–º, –ª—é–±–ª—é
                –º—É–∑—ã–∫—É.
              </Text>
              <blockquote cite="https://journal.tinkoff.ru/programmer/">
                <Text>
                  <i>
                    ¬´–ê –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ –ø—Ä–∏–Ω—Ü–∏–ø–µ ‚Äî –µ—Å–ª–∏ –≤—ã –ª–µ–Ω–∏–≤—ã –Ω–∞—Å—Ç–æ–ª—å–∫–æ,
                      —á—Ç–æ –≥–æ—Ç–æ–≤—ã —Ä–∞–±–æ—Ç–∞—Ç—å —Å—É—Ç–∫–∏, —á—Ç–æ–±—ã –ø–æ—Ç–æ–º –∫–æ–º–ø—å—é—Ç–µ—Ä —Å–¥–µ–ª–∞–ª –≤–∞—à—É
                      —Ä–∞–±–æ—Ç—É –∑–∞ –º–∏–Ω—É—Ç—É.¬ª
                  </i>
                </Text>
                <br></br>
                <cite>
                  <a
                    class={styles.Source}
                    href="https://journal.tinkoff.ru/programmer/"
                    target="_blank"
                  >
                    –ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç: –∑–∞—Ä–ø–ª–∞—Ç–∞, —á—Ç–æ –¥–µ–ª–∞–µ—Ç, –∫–∞–∫ —Å—Ç–∞—Ç—å –∏ –≥–¥–µ —É—á–∏—Ç—å—Å—è
                  </a>
                </cite>
              </blockquote>
              <blockquote>
                <Text>
                  <i>
                    ¬´... –≠—Ç–æ—Ç –≤–∞—Ä–∏–∞–Ω—Ç –≥—Ä—É—Å—Ç–Ω—ã–π, –∏ –æ–±—ã—á–Ω–æ –æ–Ω —è–≤–ª—è–µ—Ç—Å—è —Å–ª–µ–¥—Å—Ç–≤–∏–µ–º
                    —Ç–æ–≥–æ, —á—Ç–æ —á–µ–ª–æ–≤–µ–∫, –Ω–µ –≤–µ—Ä–∏—Ç –≤ —Å–≤–æ–∏ —Å–∏–ª—ã –∏–ª–∏ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤
                    –ø–ª–µ–Ω—É —É –ª–µ–Ω–∏. –í–µ—Ä—É –≤ —Å–µ–±—è ‚Äî —ç—Ç–æ –∫ –ø—Å–∏—Ö–æ–ª–æ–≥—É, –∞ —Å –ª–µ–Ω—å—é –Ω—É–∂–Ω–æ
                    –±–æ—Ä–æ—Ç—å—Å—è.¬ª
                  </i>
                </Text>
                <br></br>
                <cite>
                  <a
                    class={styles.Source}
                    href="https://maxpfrontend.ru/vebinary/voprosy-dlya-sobesedovaniya-javascript-razrabotchika/"
                    target="_blank"
                  >
                    –°–ø–∏—Å–æ–∫ –≤–æ–ø—Ä–æ—Å–æ–≤ –∏ –æ—Ç–≤–µ—Ç–æ–≤ –¥–ª—è —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è javascript —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤Ôªø
                  </a>
                </cite>
              </blockquote>
            </Section>
            <Section
              title={`üíº –û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã ‚Äî 
              ${formatTotalWorkExperience(workExperienceData)}`}
            >
              <JobList data={workExperienceData} />
            </Section>
            <Section title="üõ†Ô∏è –ù–∞–≤—ã–∫–∏">
              <SkillList data={skillData} />
            </Section>
            <Section title="üßë‚Äçüéì –û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ">
              <EducationList data={educationData} />
            </Section>
            {/* <Section title="üìú –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã"></Section> */}
          </div>
        </main>
        <footer>
          <div
            classList={{
              [styles.CreateDate]: true,
              [createDateThemeInvoker[theme()]]: true,
            }}
          >
            –†–µ–∑—é–º–µ —Å–æ–∑–¥–∞–Ω–æ <time>{format(new Date(), "dd.MM.yyyy")}</time><br></br>
            ‚ù§Ô∏è with{" "}
            <a href="https://www.solidjs.com/" target="_blank">
              SolidJS
            </a>
          </div>
          <button class={styles.PrintButton} onClick={() => window.print()}>–†–∞—Å–ø–µ—á–∞—Ç–∞—Ç—å —Ä–µ–∑—é–º–µ</button>
        </footer>
      </div>
    </div>
  );
};

export default App;
